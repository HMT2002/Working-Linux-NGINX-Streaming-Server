
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

rtmp { 
    server { 
        listen 1935; 
        application live { 
            live on; 
            interleave on;
             hls on; 
            hls_path /tmp/hls; 
            hls_fragment 15s; 
            dash on; 
            dash_path /tmp/dash; 
            dash_fragment 15s; 
            #pull rtmp://tv2.example.com:443/root/new name=tv2 static;
        } 
#        application hls { 
#           hls on; 
#           hls_path /tmp/hls; 
#           hls_fragment 15s; 
#       } 
#       
#       application dash { 
#           dash on; 
#           dash_path /tmp/dash; 
#           dash_fragment 15s; 
#       } 
   }
} 
 

http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 100M;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

   #types {
    #   text/html html;
    #   application/dash+xml mpd;
    #   application/vnd.apple.mpegurl m3u8;
    #   video/mp2t ts;
    #    text/html html;
    #} 

    server {
        listen       80;
        server_name  localhost;
        add_header Access-Control-Allow-Origin *;
        client_max_body_size 100M;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;


        location /tv/ { 
            root	/tmp/hls; 
            autoindex on;
        }
        location /livehls/ {
            alias    /tmp/hls;
            autoindex on;
        }
        
        location /uploadthings/ {
            alias    /tmp;
        }
        
        location ~ "/upload/([0-9a-zA-Z-.]*)$"{
        dav_methods PUT DELETE MKCOL COPY MOVE;
        client_body_temp_path /tmp/uploadfiles;
        client_body_buffer_size 128k;        
        client_max_body_size 100M;
        alias /tmp/uploadfiles/$1;
        create_full_put_path on;
        dav_access group:rw all:r;
        
        }
        
        
        location /uploadformdata {
        # Pass altered request body to this location
    	#upload_pass /internal_upload;
    	upload_pass /;
    	upload_pass_args on;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /tmp/$upload_file_name;

        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        upload_pass_form_field "^submit$|^description$";

        upload_cleanup 400 404 499 500-505;
    }

    # Pass altered request body to a backend
	location /internal_upload {
        proxy_pass   http://localhost:8080;
	}
    
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        
        location / {
            #root   html;
            #index index.html index.html;
            root /tmp/hls;
            try_files $uri $uri/ =404;
        }
        
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
